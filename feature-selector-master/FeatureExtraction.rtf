{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0\c84314;\cssrgb\c0\c0\c0\c4706;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs48 \cf0 Instruction for feature analysis
\f1\b0\fs24 \
\pard\pardeftab720\sl380\partightenfactor0

\f2\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 from feature_selector import FeatureSelector\
# Features are in data and labels are in data_labels\cb1 \
\cb3 fs = FeatureSelector(data = data, labels = data_label)\
\
#To identify missing values\
fs.identify_missing(missing_threshold = 0.6)\
\
#Plotting graph for missing values\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 fs.plot_missing()\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \
#To identify correlated columns\
fs.identify_collinear(correlation_threshold = 0.98)\
\
\
#Plotting heat map\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 fs.plot_collinear()\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \
\pard\pardeftab720\sl380\partightenfactor0
\cf2 # list of collinear features to remove\cb1 \
\cb3 collinear_features = fs.ops['collinear']\
# dataframe of collinear features\cb1 \
\cb3 fs.record_collinear.head()\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \
\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 # Pass in the appropriate parameters\cb1 \
\cb3 fs.identify_zero_importance(task = 'classification', \cb1 \
\cb3                             eval_metric = 'auc', \cb1 \
\cb3                             n_iterations = 10, \cb1 \
\cb3                              early_stopping = True)\
# list of zero importance features\cb1 \
\cb3 zero_importance_features = fs.ops['zero_importance']\
\
\
# plot the feature importances\cb1 \
\cb3 fs.plot_feature_importances(threshold = 0.99, plot_n = 12)\
\
#Low importance feature\
fs.identify_low_importance(cumulative_importance = 0.99)\
\
fs.feature_importances.head(10)\
\
#identify single unique values\
fs.identify_single_unique()\
\
#Plotting histogram for unique values\
fs.plot_unique()\
\
\
\pard\pardeftab720\sl380\partightenfactor0
\cf2 \
}